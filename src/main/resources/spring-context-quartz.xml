<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
       default-lazy-init="true">

    <description>Spring Configuration</description>

    <!-- 用Quartz配置计划任务 -->
    <bean id="quartzScheduler"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="configLocation" value="classpath:quartz.properties" />
        <property name="dataSource" ref="dataSource"/>
        <property name="schedulerName" value="CRMscheduler" />
        <!--必须的，QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动 -->
        <property name="startupDelay" value="30" />
        <property name="applicationContextSchedulerContextKey" value="applicationContext" />
        <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
        <property name="overwriteExistingJobs" value="true" />
        <!-- 设置自动启动 -->
        <property name="autoStartup" value="true" />
        <!-- 注册触发器 -->
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
    </bean>

    <!--创建任务触发器-->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="cronTask" />
        <property name="cronExpression" value="0 * * ? * *" />
    </bean>

    <!--创建任务-->
    <!--MethodInvokingJobDetailFactoryBean不支持集群，JobDetailFactoryBean支持集群-->
    <!--<bean id="createDBJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="TestJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
        是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程
    </bean> -->
    <bean id="cronTask" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="org.springframework.scheduling.MyDetailQuartzJobBean"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="targetObject" value="TestJob" />
                <entry key="targetMethod" value="execute" />
            </map>
        </property>
        <property name="durability" value="true" />
    </bean>

</beans>